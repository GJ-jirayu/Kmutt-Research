<?xml version="1.0" encoding="UTF-8"?>
<!-- 
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN 2.0//EN" "http://www.springframework.org/dtd/spring-beans-2.0.dtd">
 -->
<!--  
<beans>
 -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc" 
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
	<!-- The one and only FAQService -->
	<mvc:resources mapping="/resources/**" location="/resources/" /> 
	<context:component-scan base-package="th.ac.kmutt.research" />
	 
   <!--  
	<bean id="downloadsService" class="th.ac.kmutt.research.service.impl.DownloadsServiceImpl">
	 
	</bean>
	-->
	<!--
		enable access to externalized properties via
		PropertyPlaceholderConfigurer
	-->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="WEB-INF/download.properties" />
	</bean>

	<!--
		Message source for this context, loaded from localized "messages_xx"
		files
	-->
	<!-- 
		  <bean id="localeChangeInterceptor"
			class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
	 
	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
	
    </bean>
	
	
	 <bean id="handlerMapping"
            class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="interceptors">
			<list>
				<ref bean="localeChangeInterceptor" />
			</list>
		</property>
	</bean> 
	
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
	</bean>
 -->
 <!-- 
 <bean id="localeChangeInterceptor"
class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
<property name="paramName" value="lang" />
</bean>

<bean id="localeResolver"
class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
<property name="defaultLocale" value="en"/>
</bean>
 -->
<!--    
<bean 
class="org.springframework.web.portlet.handler.PortletModeHandlerMapping" >
<property name="interceptors">
<ref bean="localeChangeInterceptor" />
</property>
</bean>
 -->
 <bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<!-- Default View Resolver -->
	<!-- -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	 
	<!--
		This bean sets up the Velocity environment for us based on a root path
		for templates. Optionally, a properties file can be specified for more
		control over the Velocity environment, but the defaults are pretty
		sane for file based template loading.
	-->
	<!-- 
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
	</bean>
 	-->
	<!--

		View resolvers can also be configured with ResourceBundles or XML
		files. If you need different view resolving based on Locale, you have
		to use the resource bundle resolver.
	-->
	<!-- 
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
	</bean>
 	-->
	<!-- freemarker config -->
	<!-- 
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/" />
	</bean>
 	-->
	<!--

		View resolvers can also be configured with ResourceBundles or XML
		files. If you need different view resolving based on Locale, you have
		to use the resource bundle resolver.
	-->
	<!-- 
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
	</bean>
	 -->
	<!-- Default ExceptionHandler -->
	<bean id="defaultExceptionHandler"
		class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver">
		<property name="order" value="10" />
		<property name="defaultErrorView" value="error" />
		<property name="exceptionMappings">
			<props>
				<prop key="javax.portlet.PortletSecurityException">unauthorized</prop>
				<prop key="javax.portlet.UnavailableException">unavailable</prop>
			</props>
		</property>
	</bean>

</beans>
